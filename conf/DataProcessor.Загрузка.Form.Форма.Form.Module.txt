&НаСервере
Процедура ОчиститьВсе()
	Выборка = Справочники.Разделы.Выбрать();
	Пока Выборка.Следующий() Цикл
		Об1 = Выборка.ПолучитьОбъект();
		Об1.Удалить();
	КонецЦикла;
	
	Выборка = Документы.РезультатТестирования.Выбрать();
	Пока Выборка.Следующий() Цикл
		Об1 = Выборка.ПолучитьОбъект();
		Об1.Удалить();
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура КомандаЗагрузитьНаСервере()
	АдресВебСервиса = Константы.АдресВебСервиса.Получить();
	Если ПустаяСтрока(АдресВебСервиса) Тогда
		Сообщить("Не задан адрес веб сервиса (Константа)");
		Возврат;
	КонецЕсли;
	
	ПроцентЗагрузки = 0;
	
	Лист = "";
	
	НомерРаздела = 0;
	Раздел = "";
	НомерВопроса = 0;
	Вопрос = "";
	Картинка = "";
	Ответы = "";
	ПометкаУдаления1 = 0;
	ПометкаУдаленияКатегории1 = 0;	
	
	WS = Новый WSОпределения(АдресВебСервиса, "WebService", "123");
	ПроксиСервер = Новый WSПрокси(WS, "http://InfoBase4xdto", "wstest1cprof", "wstest1cprofSoap");
	
	Рез = ПроксиСервер.GetDataList(Лист);
	Лист = СтрЗаменить(Лист, "<tr>", Символы.ПС);
	
	Кол = СтрЧислоСтрок(Лист);
	
	ОчиститьВсе();
	
	ЗапросРаздел = Новый Запрос;
	ЗапросРаздел.Текст = "ВЫБРАТЬ
	               |	Разделы1.Ссылка
	               |ИЗ
	               |	Справочник.Разделы КАК Разделы1
	               |ГДЕ
	               |	Разделы1.НомерРаздела = &НомерРаздела";
				   
	ЗапросВопрос = Новый Запрос;
	ЗапросВопрос.Текст = "ВЫБРАТЬ
	                     |	ВопросыИОтветы1.Ссылка
	                     |ИЗ
	                     |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы1
	                     |ГДЕ
	                     |	ВопросыИОтветы1.Владелец = &СсылкаРаздел
	                     |	И ВопросыИОтветы1.НомерВопроса = &НомерВопроса";
						 
	
	Элементы.ПроцентЗагрузки.Видимость = Истина;
						 
	Для н = 1 по Кол Цикл
		ТекGUID = СтрПолучитьСтроку(Лист, н);
		Рез = ПроксиСервер.GetData(ТекGUID, НомерРаздела, Раздел, НомерВопроса, Вопрос, Картинка, ПометкаУдаления1, ПометкаУдаленияКатегории1, Ответы);
		
		ЗапросРаздел.УстановитьПараметр("НомерРаздела", НомерРаздела);
		ЗапросРаздел.УстановитьПараметр("Раздел", Раздел);
		Выборка = ЗапросРаздел.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			СсылкаРаздел = Выборка.Ссылка;
			ОбъектРаздел = СсылкаРаздел.ПолучитьОбъект();
		Иначе
			ОбъектРаздел = Справочники.Разделы.СоздатьЭлемент();
		КонецЕсли;
		
		ОбъектРаздел.Наименование = Раздел;
		ОбъектРаздел.НомерРаздела = НомерРаздела;
		ОбъектРаздел.ПометкаУдаления = ПометкаУдаленияКатегории1 = 1;
		ОбъектРаздел.Записать();
		
		СсылкаРаздел = ОбъектРаздел.Ссылка;
		
		ЗапросВопрос.УстановитьПараметр("СсылкаРаздел", СсылкаРаздел);
		ЗапросВопрос.УстановитьПараметр("НомерВопроса", НомерВопроса);
		
		Выборка = ЗапросВопрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СсылкаВопрос = Выборка.Ссылка;
			ОбъектВопрос = СсылкаВопрос.ПолучитьОбъект();
		Иначе
			ОбъектВопрос = Справочники.ВопросыИОтветы.СоздатьЭлемент();
			ОбъектВопрос.Владелец = СсылкаРаздел;
			ОбъектВопрос.НомерВопроса = НомерВопроса;
		КонецЕсли;
		
		ОбъектВопрос.Наименование = Вопрос;
		
		ОбъектВопрос.Вопрос = Вопрос;
		Если ПустаяСтрока(Картинка) Тогда
			ОбъектВопрос.ХранилищеКартинки = Новый ХранилищеЗначения(Неопределено);
		Иначе
			ОбъектВопрос.ХранилищеКартинки = Новый ХранилищеЗначения(Base64Значение(Картинка));
		КонецЕсли;
		
		Ответы = СтрЗаменить(Ответы, "<tr>", Символы.ПС);
		КолОтветов = СтрЧислоСтрок(Ответы);
		
		ОбъектВопрос.Ответы.Очистить();
		
		
		Для м = 1 по КолОтветов Цикл                
			СтрТекОтвет = СтрПолучитьСтроку(Ответы, м);
			СтрТекОтвет = СтрЗаменить(СтрТекОтвет, "<td>", Символы.ПС);
			
			НовСтр = ОбъектВопрос.Ответы.Добавить();
			
			НовСтр.НомерОтвета = Число(СтрПолучитьСтроку(СтрТекОтвет, 1));
			НовСтр.Ответ = СтрПолучитьСтроку(СтрТекОтвет, 2);
			НовСтр.ЭтоПравильный = СтрПолучитьСтроку(СтрТекОтвет, 3) = "1";
			
		КонецЦикла;
		
		ОбъектВопрос.ПометкаУдаления = ПометкаУдаления1 = 1;
		
		ОбъектВопрос.Записать();
		
		ПроцентЗагрузки = Цел(н / кол * 100);
	КонецЦикла;
	
	Сообщить("Успешно загружено " + Строка(Кол) + " вопросов!");
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗагрузить(Команда)
	
	#Если НЕ МобильноеПриложениеКлиент и НЕ МобильноеПриложениеСервер Тогда
		Предупреждение("Доступно только на мобильном клиенте!");
		Возврат;
	#КонецЕсли
	
	Если Вопрос("Загрузить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	КомандаЗагрузитьНаСервере();
КонецПроцедуры


&НаСервере
Процедура КомандаПроверитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВопросыИОтветы.Ссылка) КАК Кол
	               |ИЗ
	               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВопросыИОтветы.Ссылка)
	               |ИЗ
	               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |ГДЕ
	               |	НЕ ВопросыИОтветы.ПометкаУдаления";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	КолВсего = Выборка.Кол;
	Выборка.Следующий();
	КолНеУдаленных = Выборка.Кол;
	Сообщить("Всего вопросов: " + Строка(КолВсего) + "(Не удаленных: " + Строка(КолНеУдаленных) + ")");
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Числа.Число1 КАК Число1
	               |ПОМЕСТИТЬ ВтЧисла
	               |ИЗ
	               |	&ЧИСЛА КАК Числа
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Разделы.НомерРаздела,
	               |	ВтЧисла.Число1 КАК НомерВопроса
	               |ИЗ
	               |	ВтЧисла КАК ВтЧисла
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Разделы КАК Разделы
	               |		ПО (НЕ Разделы.ПометкаУдаления)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВопросыИОтветы.Владелец КАК Владелец,
	               |			МАКСИМУМ(ВопросыИОтветы.НомерВопроса) КАК МаксВопрос
	               |		ИЗ
	               |			Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |		ГДЕ
	               |			НЕ ВопросыИОтветы.ПометкаУдаления
	               |			И НЕ ВопросыИОтветы.Владелец.ПометкаУдаления
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВопросыИОтветы.Владелец) КАК ВложенныйЗапрос
	               |		ПО (ВложенныйЗапрос.Владелец = Разделы.Ссылка)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |		ПО (ВопросыИОтветы.Владелец = Разделы.Ссылка)
				   |			И ВопросыИОтветы.НомерВопроса = ВтЧисла.Число1
				   |			И НЕ ВопросыИОтветы.ПометкаУдаления
	               |ГДЕ
	               |	ВтЧисла.Число1 <= ВложенныйЗапрос.МаксВопрос
	               |	И ВопросыИОтветы.Ссылка ЕСТЬ NULL ";
	
	
	Табл = Новый ТаблицаЗначений;
	МассивТ = Новый Массив;
	МассивТ.Добавить(Тип("Число"));
	Табл.Колонки.Добавить("Число1", Новый ОписаниеТипов(МассивТ));
	
	Для н = 1 по 200 Цикл
		НовСтр = Табл.Добавить();
		НовСтр.Число1 = н;
	КонецЦикла;
	Запрос.УстановитьПараметр("ЧИСЛА", Табл);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Сообщить("Пропущенные: ");
	КонецЕсли;
	Пока Выборка.Следующий() Цикл
		Сообщить("" + Строка(Выборка.НомерРаздела) + "." + Строка(Выборка.НомерВопроса));
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВопросыИОтветыОтветы.Ссылка,
	               |	КОЛИЧЕСТВО(ВопросыИОтветыОтветы.ЭтоПравильный) КАК КолПравильных
	               |ИЗ
	               |	Справочник.ВопросыИОтветы.Ответы КАК ВопросыИОтветыОтветы
	               |ГДЕ
	               |	ВопросыИОтветыОтветы.ЭтоПравильный
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВопросыИОтветыОтветы.Ссылка
	               |
	               |ИМЕЮЩИЕ
	               |	КОЛИЧЕСТВО(ВопросыИОтветыОтветы.ЭтоПравильный) <> 1";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		Сообщить("Неверно указанны правильные ответы: ");
	КонецЕсли;
	Пока Выборка.Следующий() Цикл
		Сообщить("" + Строка(Выборка.Ссылка.Владелец.НомерРаздела) + "." + Строка(Выборка.Ссылка.НомерВопроса));
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура КомандаПроверить(Команда)
	КомандаПроверитьНаСервере();
КонецПроцедуры


&НаСервере
Процедура КомандаСколькоНеПравильноОтвеченныхНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РезультатыТестированияСрезПоследних.Вопрос) КАК КоличествоВопросов
	               |ИЗ
	               |	РегистрСведений.РезультатыТестирования.СрезПоследних КАК РезультатыТестированияСрезПоследних
	               |ГДЕ
	               |	РезультатыТестированияСрезПоследних.Правильный = 0";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Сообщить(Формат(Выборка.КоличествоВопросов, "ЧН=0"));
КонецПроцедуры


&НаКлиенте
Процедура КомандаСколькоНеПравильноОтвеченных(Команда)
	КомандаСколькоНеПравильноОтвеченныхНаСервере();
КонецПроцедуры


&НаСервере
Процедура КомандаЗагрузитьИзФайлаНаСервере()
	ПутьКФайлу = Константы.ПутьКФайлу.Получить();
	Если ПустаяСтрока(ПутьКФайлу) Тогда
		ПутьКФайлу = "http://birgom.ru/f/1ctestprofmobile/test_platforma_data.xml";
		//Возврат;
	КонецЕсли;
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ПутьКФайлу);
	н = 0;                                                                                                    
	Чтение.Прочитать();
	Чтение.Прочитать();
	
	ФлагКонец = Ложь;
	
	ОчиститьВсе();
	
	//Попытки = 1;
	
	Пока НЕ ФлагКонец Цикл
		Попытка
			ТекОбъект = ПрочитатьXML(Чтение);
			ТипЗнчОбъект = ТипЗнч(ТекОбъект);
			Сообщить(Строка(н) + " " + ТипЗнчОбъект);
			Если ТипЗнчОбъект = Тип("СправочникОбъект.Разделы") или ТипЗнчОбъект = Тип("СправочникОбъект.ВопросыИОтветы") Тогда
				ТекОбъект.Записать();
				
				Если ТипЗнчОбъект = Тип("СправочникОбъект.ВопросыИОтветы") Тогда
					н = н + 1;
				КонецЕсли;
			КонецЕсли;
		Исключение
			ФлагКонец = Истина;
		КонецПопытки;
		
	КонецЦикла;
	Чтение.Закрыть();
	Сообщить("Успешно прочитано " + Строка(н) + " вопросов!");
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗагрузитьИзФайла(Команда)
	#Если НЕ МобильноеПриложениеКлиент и НЕ МобильноеПриложениеСервер Тогда
		Предупреждение("Доступно только на мобильном клиенте!");
		Возврат;
	#КонецЕсли
	
	Если Вопрос("Загрузить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	КомандаЗагрузитьИзФайлаНаСервере();
КонецПроцедуры


&НаСервере
Процедура КомандаЗагрузитьИзМакетаНаСервере()
//	ОбщиеМакеты.Загрузка;//
	//ПолучитьМакет
	Двоичные = ПолучитьОбщийМакет("Загрузка");
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	Двоичные.Записать(ИмяФайла);
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ИмяФайла);
	н = 0;                                                                                                    
	Чтение.Прочитать();
	Чтение.Прочитать();
	
	ФлагКонец = Ложь;
	
	ОчиститьВсе();
	
	//Попытки = 1;
	
	Пока НЕ ФлагКонец Цикл
		Попытка
			ТекОбъект = ПрочитатьXML(Чтение);
			ТипЗнчОбъект = ТипЗнч(ТекОбъект);
		//	Сообщить(Строка(н) + " " + ТипЗнчОбъект);
			Если ТипЗнчОбъект = Тип("СправочникОбъект.Разделы") или ТипЗнчОбъект = Тип("СправочникОбъект.ВопросыИОтветы") Тогда
				ТекОбъект.Записать();
				
				Если ТипЗнчОбъект = Тип("СправочникОбъект.ВопросыИОтветы") Тогда
					н = н + 1;
				КонецЕсли;
			КонецЕсли;
		Исключение
			ФлагКонец = Истина;
		КонецПопытки;
		
	КонецЦикла;
	Чтение.Закрыть();
	Сообщить("Успешно прочитано " + Строка(н) + " вопросов!");

	
	УдалитьФайлы(ИмяФайла);
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗагрузитьИзМакета(Команда)
	КомандаЗагрузитьИзМакетаНаСервере();
КонецПроцедуры
//http://localhost/InfoBase4/ws/wstest1cprof?wsdl