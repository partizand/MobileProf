Функция ВыборВопроса(Очередь = "next", ИгнорироватьФлагТестЗавершен = Ложь)
	Если ТестЗавершен и НЕ ИгнорироватьФлагТестЗавершен Тогда
		СтрРезультат = Новый Структура("Очередь, Ссылка, НомерВопроса");
		
		Если Отвеченные.Количество() = 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Первый_Ответ = Отвеченные[0];
		Последний_Ответ = Отвеченные[Отвеченные.Количество() - 1];
		
		НайденныеСтроки = Отвеченные.НайтиСтроки(Новый Структура("Вопрос", ТекущийВопрос));
		
		
		ТекОчередь = "";
		ТекСсылка = Неопределено;
		
		Если Очередь = "first" Тогда
			ТекСсылка = Первый_Ответ.Вопрос;
			ТекОчередь = "first";
		ИначеЕсли Очередь = "last" Тогда
			ТекСсылка = Последний_Ответ.Вопрос;
			ТекОчередь = ?(Первый_Ответ = Последний_Ответ, "first", "last");
		ИначеЕсли Очередь = "next" Тогда
			Если НайденныеСтроки.Количество() = 0 Тогда
				Следующий_Ответ = Первый_Ответ;
				ТекОчередь = "first";
			Иначе
				ТекИндекс = Отвеченные.Индекс(НайденныеСтроки[0]);
				Если (ТекИндекс + 2) > Отвеченные.Количество() Тогда
					ТекИндекс = 0;
					ТекОчередь = "first";
				Иначе
					ТекИндекс = ТекИндекс + 1;
					ТекОчередь = "next";
				КонецЕсли;
				
				Следующий_Ответ = Отвеченные.Получить(ТекИндекс);

			КонецЕсли;
			
			ТекСсылка = Следующий_Ответ.Вопрос;
		ИначеЕсли Очередь = "prev" Тогда
			Если НайденныеСтроки.Количество() = 0 Тогда
				Предыдущий_Ответ = Последний_Ответ;
				ТекОчередь = "last";
			Иначе
				ТекИндекс = Отвеченные.Индекс(НайденныеСтроки[0]);
				
				Если (ТекИндекс = 0) Тогда
					ТекИндекс = Отвеченные.Количество() - 1;
					ТекОчередь = "last";
				Иначе
					ТекИндекс = ТекИндекс - 1;
					ТекОчередь = "prev";
				КонецЕсли;
				
				Предыдущий_Ответ = Отвеченные.Получить(ТекИндекс);
			КонецЕсли;
			
			ТекСсылка = Предыдущий_Ответ.Вопрос;
		ИначеЕсли Очередь = "nextwrong" или Очередь = "prevwrong" или Очередь = "firstwrong" Тогда
			Пред_Непр = Неопределено;
			След_Непр = Неопределено;
			Первый_Непр = Неопределено;
			Последний_Непр = Неопределено;
			
			ТекФлаг = Ложь;
			
			Для каждого ТекСтр из Отвеченные Цикл
				Если ТекСтр.НомерОтвета = ТекСтр.ПравильныйОтвет и НЕ ТекСтр.БылаИспользованаПодсказка Тогда
					Продолжить;
				КонецЕсли;
				
				Если Первый_Непр = Неопределено Тогда
					Первый_Непр = ТекСтр.Вопрос;
				КонецЕсли;
				Последний_Непр = ТекСтр.Вопрос;
				
				Если НЕ ТекФлаг Тогда
					Если ТекСтр.Вопрос = НайденныеСтроки[0].Вопрос Тогда
						ТекФлаг = Истина;
					Иначе
						Пред_Непр = ТекСтр.Вопрос;
					КонецЕсли;
				Иначе
					Если След_Непр = Неопределено Тогда
						След_Непр = ТекСтр.Вопрос;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если Первый_Непр = Неопределено Тогда
				Возврат Неопределено;
			КонецЕсли;
			
			Если Последний_Непр = Неопределено Тогда
				Последний_Непр = Первый_Непр;
			КонецЕсли;
			
			Если Пред_Непр = Неопределено Тогда
				Пред_Непр = Последний_Непр;
			КонецЕсли;
			
			Если След_Непр = Неопределено Тогда
				След_Непр = Первый_Непр;
			КонецЕсли;
			
			Если Очередь = "nextwrong" Тогда
				ТекСсылка = След_Непр;
			ИначеЕсли Очередь = "prevwrong" Тогда
				ТекСсылка = Пред_Непр;
			Иначе
				ТекСсылка = Первый_Непр;
			КонецЕсли;
			ТекОчередь = Очередь;
		КонецЕсли;
		
		СтрРезультат.Вставить("Очередь", ТекОчередь);
		СтрРезультат.Вставить("Ссылка", ТекСсылка);
		СтрРезультат.Вставить("НомерВопроса", ТекСсылка.НомерВопроса);
				
		Возврат СтрРезультат;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	
	НеПоказыватьУдаленные = РегистрыСведений.ХранилищеНастроек.ПолучитьНастройку("НеПоказыватьУдаленные", Истина);
	
	Запрос.УстановитьПараметр("НеПоказыватьУдаленные", НеПоказыватьУдаленные);
	
	Если НЕ ЗначениеЗаполнено(ТекущийРаздел) Тогда
		
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Разделы.Ссылка,
		               |	Разделы.НомерРаздела КАК НомерРаздела
		               |ИЗ
		               |	Справочник.Разделы КАК Разделы
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА &НеПоказыватьУдаленные
		               |				ТОГДА НЕ Разделы.ПометкаУдаления
		               |			ИНАЧЕ ИСТИНА
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	НомерРаздела";
		Выборка = Запрос.Выполнить().Выбрать();
		Если НЕ Выборка.Следующий() Тогда
			Возврат Неопределено;
		КонецЕсли;
		ТекущийРаздел = Выборка.Ссылка;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущийВопрос) Тогда
		Запрос.УстановитьПараметр("Раздел", ТекущийРаздел);
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	ВопросыИОтветы.Ссылка
		               |ИЗ
		               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
		               |ГДЕ
		               |	ВопросыИОтветы.Владелец = &Раздел
		               |	И ВЫБОР
		               |			КОГДА &НеПоказыватьУдаленные
		               |				ТОГДА НЕ ВопросыИОтветы.ПометкаУдаления
		               |			ИНАЧЕ ИСТИНА
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВопросыИОтветы.НомерВопроса";
		Выборка = Запрос.Выполнить().Выбрать();
		Если НЕ Выборка.Следующий() Тогда
			Возврат Неопределено;
		КонецЕсли;
		ТекущийВопрос = Выборка.Ссылка;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Раздел", ТекущийРаздел);
	Запрос.УстановитьПараметр("Вопрос", ТекущийВопрос);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВопросыИОтветы.Владелец КАК Раздел,
	               |	ВопросыИОтветы.НомерВопроса КАК НомерВопроса
	               |ПОМЕСТИТЬ ВтТекущийВопрос
	               |ИЗ
	               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |ГДЕ
	               |	ВопросыИОтветы.Ссылка = &Вопрос
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МИНИМУМ(ВопросыИОтветы.НомерВопроса) КАК МинНомерВопроса,
	               |	МАКСИМУМ(ВопросыИОтветы.НомерВопроса) КАК МаксНомерВопроса,
	               |	МИНИМУМ(&Раздел) КАК Раздел
	               |ПОМЕСТИТЬ ВтГраницы
	               |ИЗ
	               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &НеПоказыватьУдаленные
	               |				ТОГДА НЕ ВопросыИОтветы.ПометкаУдаления
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |	И ВопросыИОтветы.Владелец = &Раздел
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	""first"" КАК Очередь,
	               |	ВопросыИОтветы.Ссылка,
	               |	ВопросыИОтветы.НомерВопроса
	               |ИЗ
	               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтГраницы КАК ВтГраницы
	               |		ПО (ВтГраницы.МинНомерВопроса = ВопросыИОтветы.НомерВопроса)
	               |			И (ВтГраницы.Раздел = ВопросыИОтветы.Владелец)
	               |			И (ВЫБОР
	               |				КОГДА &НеПоказыватьУдаленные
	               |					ТОГДА НЕ ВопросыИОтветы.ПометкаУдаления
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	""last"",
	               |	ВопросыИОтветы.Ссылка,
	               |	ВопросыИОтветы.НомерВопроса
	               |ИЗ
	               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтГраницы КАК ВтГраницы
	               |		ПО (ВтГраницы.МаксНомерВопроса = ВопросыИОтветы.НомерВопроса)
	               |			И (ВтГраницы.Раздел = ВопросыИОтветы.Владелец)
	               |			И (ВЫБОР
	               |				КОГДА &НеПоказыватьУдаленные
	               |					ТОГДА НЕ ВопросыИОтветы.ПометкаУдаления
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВложенныйЗапрос.Очередь,
	               |	ВложенныйЗапрос.Ссылка,
	               |	ВложенныйЗапрос.НомерВопроса
	               |ИЗ
	               |	(ВЫБРАТЬ ПЕРВЫЕ 1
	               |		ВопросыИОтветы.Ссылка КАК Ссылка,
	               |		ВопросыИОтветы.НомерВопроса КАК НомерВопроса,
	               |		""prev"" КАК Очередь
	               |	ИЗ
	               |		Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТекущийВопрос КАК ВтТекущийВопрос
	               |			ПО (ВтТекущийВопрос.Раздел = ВопросыИОтветы.Владелец)
	               |				И (ВЫБОР
	               |					КОГДА &НеПоказыватьУдаленные
	               |						ТОГДА НЕ ВопросыИОтветы.ПометкаУдаления
	               |					ИНАЧЕ ИСТИНА
	               |				КОНЕЦ)
	               |				И ВопросыИОтветы.НомерВопроса < ВтТекущийВопрос.НомерВопроса
	               |	
	               |	УПОРЯДОЧИТЬ ПО
	               |		НомерВопроса УБЫВ) КАК ВложенныйЗапрос
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВложенныйЗапрос.Очередь,
	               |	ВложенныйЗапрос.Ссылка,
	               |	ВложенныйЗапрос.НомерВопроса
	               |ИЗ
	               |	(ВЫБРАТЬ ПЕРВЫЕ 1
	               |		ВопросыИОтветы.Ссылка КАК Ссылка,
	               |		ВопросыИОтветы.НомерВопроса КАК НомерВопроса,
	               |		""next"" КАК Очередь
	               |	ИЗ
	               |		Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТекущийВопрос КАК ВтТекущийВопрос
	               |			ПО (ВтТекущийВопрос.Раздел = ВопросыИОтветы.Владелец)
	               |				И (ВЫБОР
	               |					КОГДА &НеПоказыватьУдаленные
	               |						ТОГДА НЕ ВопросыИОтветы.ПометкаУдаления
	               |					ИНАЧЕ ИСТИНА
	               |				КОНЕЦ)
	               |				И ВопросыИОтветы.НомерВопроса > ВтТекущийВопрос.НомерВопроса
	               |	
	               |	УПОРЯДОЧИТЬ ПО
	               |		НомерВопроса) КАК ВложенныйЗапрос";
	//
	
	СтрРезультат = Новый Структура("Очередь, Ссылка, НомерВопроса");
	
	ТЗРезультат = Запрос.Выполнить().Выгрузить();
	Если Очередь = "next" Тогда
		НайденнаяСтрока = ТЗРезультат.НайтиСтроки(Новый Структура("Очередь", "next"));
		Если НайденнаяСтрока <> Неопределено и НайденнаяСтрока.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрРезультат, НайденнаяСтрока[0]);
			Возврат СтрРезультат;
		КонецЕсли;
		
		НайденнаяСтрока = ТЗРезультат.НайтиСтроки(Новый Структура("Очередь", "first"));
		
		ЗаполнитьЗначенияСвойств(СтрРезультат, НайденнаяСтрока[0]);
		Возврат СтрРезультат;
		
	ИначеЕсли Очередь = "prev" Тогда
		
		НайденнаяСтрока = ТЗРезультат.НайтиСтроки(Новый Структура("Очередь", "prev"));
		Если НайденнаяСтрока <> Неопределено и НайденнаяСтрока.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрРезультат, НайденнаяСтрока[0]);
			Возврат СтрРезультат;
		КонецЕсли;
		
		НайденнаяСтрока = ТЗРезультат.НайтиСтроки(Новый Структура("Очередь", "last"));
		
		ЗаполнитьЗначенияСвойств(СтрРезультат, НайденнаяСтрока[0]);
		Возврат СтрРезультат;
	Иначе
		
		НайденнаяСтрока = ТЗРезультат.НайтиСтроки(Новый Структура("Очередь", "first"));
		
		ЗаполнитьЗначенияСвойств(СтрРезультат, НайденнаяСтрока[0]);
		Возврат СтрРезультат;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

&НаСервере
Процедура ПоказатьВопрос(СсылкаВопрос)
	
	ТекущийВопрос = СсылкаВопрос;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВопросыИОтветы.Владелец,
	               |	ВопросыИОтветы.Владелец.Наименование КАК НаименованиеРаздела,
	               |	ВопросыИОтветы.Владелец.НомерРаздела КАК НомерРаздела,
	               |	ВопросыИОтветы.НомерВопроса,
	               |	ВопросыИОтветы.Вопрос,
	               |	ВопросыИОтветы.ХранилищеКартинки,
	               |	ВопросыИОтветы.Комментарий
	               |ИЗ
	               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |ГДЕ
	               |	ВопросыИОтветы.Ссылка = &Вопрос
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВопросыИОтветыОтветы.НомерОтвета КАК НомерОтвета,
	               |	ВопросыИОтветыОтветы.Ответ,
	               |	ВопросыИОтветыОтветы.ЭтоПравильный
	               |ИЗ
	               |	Справочник.ВопросыИОтветы.Ответы КАК ВопросыИОтветыОтветы
	               |ГДЕ
	               |	ВопросыИОтветыОтветы.Ссылка = &Вопрос
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерОтвета";
	
	Запрос.УстановитьПараметр("Вопрос", ТекущийВопрос);
	
	ПакетыЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаВопрос = ПакетыЗапроса[0].Выбрать();
	ВыборкаВопрос.Следующий();
	
	Раздел = Строка(ВыборкаВопрос.НомерРаздела) + ". " + ВыборкаВопрос.НаименованиеРаздела;
	Вопрос = Строка(ВыборкаВопрос.НомерРаздела) + "." + Строка(ВыборкаВопрос.НомерВопроса) + ". " + ВыборкаВопрос.Вопрос;
	ТекущийРаздел = ВыборкаВопрос.Владелец;
	
	
	ДвоичныеДанныеКартинки = ВыборкаВопрос.ХранилищеКартинки.Получить();
	Если ДвоичныеДанныеКартинки = Неопределено или ДвоичныеДанныеКартинки.Размер() = 0 Тогда
		АдресКартинки = "";
		Элементы.Картинка.Видимость = Ложь;
	Иначе
		АдресКартинки = ПоместитьВоВременноеХранилище(ДвоичныеДанныеКартинки);
		Элементы.Картинка.Видимость = Истина;
	КонецЕсли;
	
	ВыборкаОтветы = ПакетыЗапроса[1].Выбрать();
	
	НайденныеСтроки = Отвеченные.НайтиСтроки(Новый Структура("Вопрос", ТекущийВопрос));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		ЕстьОтвеченный = Неопределено;
		Ответ = 0;
	Иначе
		ЕстьОтвеченный = НайденныеСтроки[0];
		// Добавил установку Ответ иначе перетирается
		Ответ = ЕстьОтвеченный.НомерОтвета;
	КонецЕсли;
	
	Элементы.Комментарий.Видимость = (ТестЗавершен) И ((НЕ ПустаяСтрока(ТекущийВопрос.Комментарий)));
	
	н = 1;
	
	Пока ВыборкаОтветы.Следующий() Цикл
		
		ЭлОтвет = Элементы["Ответ" + Строка(н)];
		ЭлОтвет.Заголовок = Строка(ВыборкаОтветы.НомерОтвета) + ". " + ВыборкаОтветы.Ответ;		
		
		ЭлФлажок = Элементы["Флажок" + Строка(н)];
		ЭлФлажок.Видимость = Истина;
		ЭлФлажок.Заголовок = Строка(ВыборкаОтветы.НомерОтвета);
		
		ЭлОтвет.Шрифт = Новый Шрифт(ЭлОтвет.Шрифт,,,Ложь,,Ложь);
		ЭтаФорма["Флажок" + Строка(н)] = Ложь;
		
		
		
			
		
		Если ЕстьОтвеченный <> Неопределено Тогда
			Если ТестЗавершен и ВыборкаОтветы.ЭтоПравильный Тогда
				ЭлОтвет.Шрифт = Новый Шрифт(ЭлОтвет.Шрифт,,,Истина,,Истина);
			КонецЕсли;
			
			Если ЕстьОтвеченный.НомерОтвета = ВыборкаОтветы.НомерОтвета Тогда
				ЭтаФорма["Флажок" + Строка(н)] = Истина;
			КонецЕсли;
		КонецЕсли;

		
		ЭлОтвет.Видимость = Истина;
		
		н = н + 1;
	КонецЦикла;
	
	Пока н <= 10 Цикл
		ЭтаФорма["Флажок" + Строка(н)] = Ложь;
		
		ЭлФлажок = Элементы["Флажок" + Строка(н)];
		ЭлФлажок.Видимость = Ложь;
		ЭлФлажок.Заголовок = "";
		
		ЭлОтвет = Элементы["Ответ" + Строка(н)];
		ЭлОтвет.Заголовок = "";		
		
		ЭлОтвет.Шрифт = Новый Шрифт(ЭлОтвет.Шрифт,,,Ложь,,Ложь);
		
		
		ЭлОтвет.Видимость = Ложь;
		
		н = н + 1;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредыдущий(Команда)
	
	Рез = ВыборВопроса("prev");
	Если Рез.Очередь <> "prev" Тогда
		Если Вопрос("Это первый вопрос. Показать последний вопрос?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ПоказатьВопрос(Рез.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура КомандСледующий(Команда)

	Рез = ВыборВопроса("next");
	Если Рез.Очередь <> "next" Тогда
		Если Вопрос("Это последний вопрос. Показать первый вопрос?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ПоказатьВопрос(Рез.Ссылка);
КонецПроцедуры

&НаСервере
Функция КомандаВыборРазделаНаСервере()
	СписокСсылок = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", Отвеченные.Выгрузить(,"Вопрос").ВыгрузитьКолонку("Вопрос"));
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВопросыИОтветы.Владелец
	               |ИЗ
	               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |ГДЕ
	               |	ВопросыИОтветы.Ссылка В(&Ссылки)";
	СписокСсылок.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Владелец"));
	
	Возврат СписокСсылок;
КонецФункции

&НаКлиенте
Процедура КомандаВыборРаздела(Команда)
	//КомандаВыборРазделаНаСервере();
	Если ТестЗавершен Тогда
		ОткрытьФорму("Справочник.Разделы.ФормаВыбора", Новый Структура("ТекущаяСтрока, Ссылки", ТекущийРаздел, КомандаВыборРазделаНаСервере()),ЭтаФорма);
	Иначе
		ОткрытьФорму("Справочник.Разделы.ФормаВыбора", Новый Структура("ТекущаяСтрока", ТекущийРаздел),ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТекущийВопрос.Пустая() Тогда
	
		Рез = ВыборВопроса("first");
		Тек = Рез.Ссылка;
	Иначе
		Тек = ТекущийВопрос;
	КонецЕсли;
	
	ПоказатьВопрос(Тек);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Разделы") Тогда
		ТекущийРаздел = ВыбранноеЗначение;
		Рез = ВыборВопроса("first");
	
		ПоказатьВопрос(Рез.Ссылка);
	Иначе
		ПоказатьВопрос(ВыбранноеЗначение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КартинкаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Файл = ПолучитьИмяВременногоФайла(".jpg");
	ПолучитьИзВременногоХранилища(АдресКартинки).Записать(Файл);
	ЗапуститьПриложение(Файл,,Истина);
	#Если МобильноеПриложениеКлиент или МобильноеПриложениеСервер Тогда
	УдалитьФайлы(Файл);
	#КонецЕсли
КонецПроцедуры

&НаСервере
Функция КомандаВыборВопросаНаСервере()
	СписокСсылок = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", Отвеченные.Выгрузить(,"Вопрос").ВыгрузитьКолонку("Вопрос"));
	Запрос.УстановитьПараметр("Раздел", ТекущийРаздел);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВопросыИОтветы.Ссылка
	               |ИЗ
	               |	Справочник.ВопросыИОтветы КАК ВопросыИОтветы
	               |ГДЕ
	               |	ВопросыИОтветы.Ссылка В(&Ссылки)
	               |	И ВопросыИОтветы.Владелец = &Раздел";
	СписокСсылок.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Возврат СписокСсылок;
КонецФункции

&НаКлиенте
Процедура КомандаВыборВопроса(Команда)
	Если ТестЗавершен Тогда
		ОткрытьФорму("Справочник.ВопросыИОтветы.ФормаВыбора", Новый Структура("Владелец, ТекущаяСтрока, Ссылки", ТекущийРаздел, ТекущийВопрос, КомандаВыборВопросаНаСервере()),ЭтаФорма);
	Иначе
		ОткрытьФорму("Справочник.ВопросыИОтветы.ФормаВыбора", Новый Структура("Владелец, ТекущаяСтрока", ТекущийРаздел, ТекущийВопрос),ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

//&НаКлиенте
//Процедура ПриЗакрытии()
//	ПриЗакрытииСервер1();
//КонецПроцедуры

//&НаСервереБезКонтекста
//Процедура ПриЗакрытииСервер1()
//	//РегистрыСведений.ХранилищеНастроек.ЗаписатьНастройку("Подготовка.ТекущийРаздел", ТекущийРаздел);
//	//РегистрыСведений.ХранилищеНастроек.ЗаписатьНастройку("Подготовка.ТекущийВопрос", ТекущийВопрос);
//КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ТестЗавершен или (Отвеченные.Количество() = 0 и Ответ = 0) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если Вопрос("Завершить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	Иначе
		Если НЕ КомандаЗавершитьНаСервере() Тогда
			Отказ = Истина;
			
			Если НЕ ПустаяСтрока(СтрРезультатТестирования) Тогда
				Сообщить(СтрРезультатТестирования);
			КонецЕсли;
			Элементы.КомандаОтветить.Доступность = Ложь;
			Элементы.КомандаПоказатьПравильный.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекНастр = РегистрыСведений.ХранилищеНастроек.ПолучитьНастройку("ТестированиеПоРазделам.ТекущийРаздел");
	ПоказыватьРезультат = РегистрыСведений.ХранилищеНастроек.ПолучитьНастройку("ПоказыватьРезультат", Истина);
	Если ТекНастр = Неопределено Тогда
		ТекущийРаздел = Справочники.Разделы.ПустаяСсылка();
	Иначе
		ТекущийРаздел = ТекНастр;
	КонецЕсли;
	
	ТекНастр = РегистрыСведений.ХранилищеНастроек.ПолучитьНастройку("ТестированиеПоРазделам.ТекущийВопрос");
	Если ТекНастр = Неопределено Тогда
		ТекущийВопрос = Справочники.ВопросыИОтветы.ПустаяСсылка();
	Иначе
		ТекущийВопрос = ТекНастр;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Флажок1ПриИзменении(Элемент)
	
	ТекНомерЭлемента = Число(СтрЗаменить(Элемент.Имя, "Флажок", ""));
	
	Ответ = Число(Элемент.Заголовок);
	
	Для н = 1 по 10 Цикл
		ЭтаФорма["Флажок" + Строка(н)] = н = ТекНомерЭлемента;
	КонецЦикла;
	
КонецПроцедуры

// Возврат Истина - если верный ответ
// Возврат Ложь - если ошибочный
&НаСервере
Функция КомандаОтветитьНаСервере(ПереходитьНаСледующий = Истина)
	
	Если Ответ = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
		
	НайденныеСтроки = Отвеченные.НайтиСтроки(Новый Структура("Вопрос", ТекущийВопрос));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		ТекСтр = Отвеченные.Добавить();
		ТекСтр.Вопрос = ТекущийВопрос;
		
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		                      |	ВопросыИОтветыОтветы.НомерОтвета
		                      |ИЗ
		                      |	Справочник.ВопросыИОтветы.Ответы КАК ВопросыИОтветыОтветы
		                      |ГДЕ
		                      |	ВопросыИОтветыОтветы.Ссылка = &Ссылка
		                      |	И ВопросыИОтветыОтветы.ЭтоПравильный");
		Запрос.УстановитьПараметр("Ссылка", ТекущийВопрос);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ТекСтр.ПравильныйОтвет = Выборка.НомерОтвета;
		КонецЕсли;
		
	Иначе
		ТекСтр = НайденныеСтроки[0];
	КонецЕсли;
	
	
	ТекСтр.НомерОтвета = Ответ;
	
	ПравильностьОтвета = Ответ = ТекСтр.ПравильныйОтвет;

	
	Если ПереходитьНаСледующий Тогда
		ПоказатьВопрос(ВыборВопроса("next").Ссылка);
	КонецЕсли;
	
	Возврат ПравильностьОтвета;
КонецФункции


&НаКлиенте
Процедура КомандаОтветить(Команда)
	Если Ответ = 0 Тогда
		Сообщить("Не выбран ответ!");
	Иначе
		ПравильностьОтвета = КомандаОтветитьНаСервере();
		Если ПоказыватьРезультат Тогда
			Если ПравильностьОтвета Тогда
				Сообщить("Правильно!");
			Иначе
				Сообщить("НЕ правильно!");
			КонецЕсли;
			
		КонецЕсли
		
		
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура КомандаПоказатьПравильныйНаСервере()
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		                  |	ВопросыИОтветыОтветы.НомерОтвета
	                      |ИЗ
	                      |	Справочник.ВопросыИОтветы.Ответы КАК ВопросыИОтветыОтветы
	                      |ГДЕ
	                      |	ВопросыИОтветыОтветы.Ссылка = &Ссылка
	                      |	И ВопросыИОтветыОтветы.ЭтоПравильный");
	Запрос.УстановитьПараметр("Ссылка", ТекущийВопрос);
	Выборка = Запрос.Выполнить().Выбрать();
	
	БылаИспользованаПодсказка = Истина;
	ПравильныйОтвет = 0;
	
	Если Выборка.Следующий() Тогда
		ПравильныйОтвет = Выборка.НомерОтвета;
	КонецЕсли;
	
	Если Ответ = ПравильныйОтвет Тогда
		БылаИспользованаПодсказка = Ложь;
	КонецЕсли;
	
	НайденныеСтроки = Отвеченные.НайтиСтроки(Новый Структура("Вопрос", ТекущийВопрос));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		ТекСтр = Отвеченные.Добавить();
		ТекСтр.Вопрос = ТекущийВопрос;
		ТекСтр.ПравильныйОтвет = ПравильныйОтвет;
		ТекСтр.БылаИспользованаПодсказка = БылаИспользованаПодсказка;
	Иначе
		ТекСтр = НайденныеСтроки[0];
		Если НЕ ТекСтр.БылаИспользованаПодсказка Тогда
			ТекСтр.БылаИспользованаПодсказка = БылаИспользованаПодсказка;
		КонецЕсли;
	КонецЕсли;
	
	н = 1;
	
	Для каждого ТекОтвет из ТекСтр.Вопрос.Ответы Цикл
		
		ЭтаФорма["Флажок" + Строка(н)] = ТекОтвет.ЭтоПравильный;
		
		Если ТекОтвет.ЭтоПравильный Тогда
			Ответ = ТекОтвет.НомерОтвета;
			
		КонецЕсли;
		
		н = н + 1;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура КомандаПоказатьПравильный(Команда)
	КомандаПоказатьПравильныйНаСервере();
КонецПроцедуры


&НаСервере
Функция КомандаЗавершитьНаСервере()
	// Убрал иначе ответ одного вопроса перетирает другой
	//Если Ответ <> 0 Тогда
	//	КомандаОтветитьНаСервере(Ложь);
    //ИначеЕсли Отвеченные.Количество() > 0 Тогда
	Если Отвеченные.Количество() > 0 Тогда
		ТекущийВопрос = Отвеченные[Отвеченные.Количество() - 1].Вопрос;
		ТекущийРаздел = ТекущийВопрос.Владелец;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
	СтрСледВопрос = ВыборВопроса("next", Истина);
	
	Если СтрСледВопрос <> Неопределено Тогда
		РегистрыСведений.ХранилищеНастроек.ЗаписатьНастройку("ТестированиеПоРазделам.ТекущийРаздел", СтрСледВопрос.Ссылка.Владелец);
		РегистрыСведений.ХранилищеНастроек.ЗаписатьНастройку("ТестированиеПоРазделам.ТекущийВопрос", СтрСледВопрос.Ссылка);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТЗ", Отвеченные.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ.Вопрос,
	               |	ТЗ.НомерОтвета,
	               |	ТЗ.ПравильныйОтвет,
	               |	ТЗ.БылаИспользованаПодсказка
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	&ТЗ КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЗ1.КоличествоПравильных,
	               |	ВЗ2.КоличествоВсего,
	               |	ВЫБОР
	               |		КОГДА ВЗ2.КоличествоВсего = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЗ1.КоличествоПравильных / ВЗ2.КоличествоВсего * 100
	               |	КОНЕЦ КАК Процент
	               |ПОМЕСТИТЬ ВтРезультатТестирования
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		КОЛИЧЕСТВО(ВТ.Вопрос) КАК КоличествоПравильных
	               |	ИЗ
	               |		ВТ КАК ВТ
	               |	ГДЕ
	               |		ВТ.НомерОтвета = ВТ.ПравильныйОтвет
	               |		И НЕ ВТ.БылаИспользованаПодсказка) КАК ВЗ1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			КОЛИЧЕСТВО(ВТ.Вопрос) КАК КоличествоВсего
	               |		ИЗ
	               |			ВТ КАК ВТ) КАК ВЗ2
	               |		ПО (ИСТИНА)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.Вопрос,
	               |	ВТ.НомерОтвета,
	               |	ВТ.ПравильныйОтвет,
	               |	ВТ.БылаИспользованаПодсказка
	               |ИЗ
	               |	ВТ КАК ВТ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВЫРАЗИТЬ(ВТ.Вопрос КАК Справочник.ВопросыИОтветы).Владелец.НомерРаздела,
	               |	ВЫРАЗИТЬ(ВТ.Вопрос КАК Справочник.ВопросыИОтветы).НомерВопроса";
	
	Отвеченные.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВтРезультатТестирования.КоличествоПравильных,
	               |	ВтРезультатТестирования.КоличествоВсего,
	               |	ВтРезультатТестирования.Процент
	               |ИЗ
	               |	ВтРезультатТестирования КАК ВтРезультатТестирования";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	СтрРезультатТестирования = "Ваш результат: " + Формат(Выборка.Процент, "ЧДЦ=; ЧН=0") + "% (" + Формат(Выборка.КоличествоПравильных, "ЧН=0") + " из " + Формат(Выборка.КоличествоВсего, "ЧН=0") + ")";
	
	НовыйДок = Документы.РезультатТестирования.СоздатьДокумент();
	
	НовыйДок.Дата = ТекущаяДата();
	
	
	Для каждого ТекВопрос из Отвеченные Цикл
		НовСтр = НовыйДок.Ответы.Добавить();
		НовСтр.Вопрос = ТекВопрос.Вопрос;
		НовСтр.НомерОтвета = ?(ТекВопрос.БылаИспользованаПодсказка, 0, ТекВопрос.НомерОтвета);
	КонецЦикла;
	
	НовыйДок.Записать();
	НовыйДок.Записать(РежимЗаписиДокумента.Проведение);
	
	
	ТестЗавершен = Истина;

	
	СтрВыбора = ВыборВопроса("firstwrong");
	
	
	
	Если СтрВыбора = Неопределено Тогда
		СтрВыбора = ВыборВопроса("first");
		Элементы.КомандаПредыдущийНеправильный.Видимость = Ложь;
		Элементы.КомандаСледующийНеправильный.Видимость = Ложь;
	Иначе
		Элементы.КомандаПредыдущийНеправильный.Видимость = Истина;
		Элементы.КомандаСледующийНеправильный.Видимость = Истина;
	КонецЕсли;
	
	ПоказатьВопрос(СтрВыбора.Ссылка);
	Возврат Ложь;
КонецФункции


&НаКлиенте
Процедура КомандаЗавершить(Команда)
	Закрыть();
КонецПроцедуры



&НаКлиенте
Процедура КомандаСледующийНеправильный(Команда)
	Рез = ВыборВопроса("nextwrong");
	Если Рез.Очередь <> "nextwrong" Тогда
		Если Вопрос("Это последний неправильный ответ. Показать первый неправильный ответ?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ПоказатьВопрос(Рез.Ссылка);
КонецПроцедуры


&НаКлиенте
Процедура КомандаПредыдущийНеправильный(Команда)
	Рез = ВыборВопроса("prevwrong");
	Если Рез.Очередь <> "prevwrong" Тогда
		Если Вопрос("Это последний неправильный ответ. Показать первый неправильный ответ?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ПоказатьВопрос(Рез.Ссылка);
КонецПроцедуры

